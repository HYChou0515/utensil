name: CI
on: [push, pull_request]
jobs:
  test:
    environment: publish-keys
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        poetry-version: [1.1.10]
        install-loopflow: ["-E loopflow", ""]
        install-loguru: ["-E loguru", ""]
        os: [ubuntu-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: install dependency
        run: poetry install ${{ matrix.install-loopflow }} ${{ matrix.install-loguru }}
      - name: run test
        run: |
          if [ "${{ matrix.os }}" == "macOS-latest" ]; then
            export OBJC_DISABLE_INITIALIZE_FORK_SAFETY="YES"
            brew install libomp
          fi
          export LOOPFLOW_INSTALLED=$(if [ "${{ matrix.install-loopflow }}" == "" ]; then echo "0"; else echo "1"; fi)
          if [ "$LOOPFLOW_INSTALLED" == "1" ]; then
            poetry run pytest utensil test
          else
            poetry run pytest test
          fi
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  build:
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup utensil
        uses: ./.github/actions/setup
      - name: build dist
        run: poetry build
      - name: install utensil
        run: poetry run pip install dist/*.gz
      - name: import utensil
        run: |
          poetry run bash -c 'cd / && python -c "import utensil; print(utensil.__version__)"'
